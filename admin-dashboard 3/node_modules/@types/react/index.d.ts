declare namespace React {
  type ReactNode = any;
  interface Context<T> {
    Provider: any;
    Consumer: any;
  }
  function createContext<T>(d: T): Context<T>;
  function useContext<T>(c: Context<T>): T;
  function useState<T>(i: T): [T, (v: T | ((prev: T) => T)) => void];
  interface FC<P = {}> { (props: P): ReactNode; }
  const Fragment: any;
}
export = React;
export as namespace React;

declare global {
  namespace JSX {
    interface IntrinsicElements {
      [elem: string]: any;
    }
    interface ElementChildrenAttribute {
      children: {};
    }
  }
}
